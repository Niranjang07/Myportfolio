{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niran\\\\bmi\\\\src\\\\pages\\\\Projects.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { FaLaptopCode } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst featuredProjects = [{\n  title: 'Block-Level Data Deduplication for Cloud',\n  tech: 'AWS, PyCharm, MySQL, SHA256',\n  desc: 'Optimized storage by removing redundant data blocks before uploading to the cloud.'\n}, {\n  title: 'VOLUGRAD – Volunteer Management Platform',\n  tech: 'React, Laravel, Node.js, SQL',\n  desc: 'Real-time chat, professor dashboards, 2FA, and secure task tracking for university volunteering.'\n}, {\n  title: 'Facial Insight Attendance System',\n  tech: 'TensorFlow, OpenCV, Flask, MySQL',\n  desc: 'AI-powered face recognition for secure attendance and report generation.'\n}, {\n  title: 'E-Commerce Admin Dashboard',\n  tech: 'React, Chart.js, Node.js, MongoDB',\n  desc: 'Feature-rich admin panel with sales tracking, analytics, and order management.'\n}, {\n  title: 'Job Market Analyzer',\n  tech: 'Python, Pandas, Plotly, Streamlit',\n  desc: 'Analyzes tech job postings to show skill demand trends across US regions.'\n}, {\n  title: 'AI-Powered Resume Ranker',\n  tech: 'NLP, Python, Scikit-learn',\n  desc: 'Ranks resumes by matching keywords against job descriptions using ML models.'\n}];\nconst academicProjects = [\n// Distributed Systems\n{\n  title: 'Totally Ordered Multicast Implementation',\n  tech: 'Java, Distributed Systems, Messaging Protocols',\n  desc: 'Implemented a totally ordered multicast algorithm ensuring uniform message delivery and consistent state across distributed processes. Designed and analyzed global event sequencing for reliability and consistency in asynchronous systems.',\n  subject: 'Distributed Systems'\n},\n// CCBD / Big Data\n{\n  title: 'Parallel Matrix Multiplication in Big Data Frameworks',\n  tech: 'Java, Scala, Apache Hadoop, Apache Spark',\n  desc: 'Designed and implemented distributed matrix multiplication algorithms, leveraging big data frameworks for scalable and parallel computation. Demonstrated efficiency gains for large matrix operations.',\n  subject: 'CCBD'\n}, {\n  title: 'KMeans Clustering on Big Data',\n  tech: 'Scala, Apache Spark, Data Clustering',\n  desc: 'Built a scalable KMeans clustering implementation using Spark, optimizing centroid calculation over iterative rounds. Analyzed clustering results and performance on large data sets.',\n  subject: 'CCBD'\n}, {\n  title: 'Real-Time Twitter Data Analysis',\n  tech: 'Java, Hadoop, MapReduce, Big Data',\n  desc: 'Processed and analyzed large volumes of Twitter data using MapReduce/Hadoop, extracting insights and trends from real-world social media streams.',\n  subject: 'CCBD'\n}, {\n  title: 'Graph Analytics with Apache Pig',\n  tech: 'Apache Pig, Big Data, Graph Processing',\n  desc: 'Wrote Pig scripts to process and analyze graph-structured data, demonstrating large-scale graph analytics in big data environments.',\n  subject: 'CCBD'\n}, {\n  title: 'Parallel Graph Partitioning using Spark GraphX',\n  tech: 'Scala, Apache Spark, GraphX, Distributed Computing',\n  desc: 'Engineered a parallel graph partitioning algorithm in Scala utilizing Spark GraphX and Pregel API. Assigned initial clusters, performed iterative label propagation, and calculated cluster sizes for large real-world graphs. Demonstrated expertise in scalable graph analytics, edge/vertex processing, and distributed computation.',\n  subject: 'CCBD'\n}, {\n  title: 'Large-Scale Graph Partitioning with Spark',\n  tech: 'Scala, Apache Spark, Graph Algorithms',\n  desc: 'Developed a graph partitioning algorithm in Scala using Spark, assigning cluster IDs and calculating partition sizes for large-scale networks. Demonstrated scalable parallel processing and partition management.',\n  subject: 'CCBD'\n},\n// DAA\n{\n  title: 'Algorithm Analysis: Insertion vs Merge Sort',\n  tech: 'Python, Algorithm Analysis, Matplotlib, Complexity Theory',\n  desc: 'Implemented and analyzed the time complexity of insertion sort and merge sort algorithms, including code for empirical performance comparison, intersection point plotting, and theoretical complexity proofs. Plotted algorithm performance and identified scenarios where each sorting technique is preferable.',\n  subject: 'DAA'\n},\n// DBMS\n{\n  title: 'Event Management System Database',\n  tech: 'MySQL, SQL, ER Diagram, Java/C#, Database Normalization, Git',\n  desc: 'Designed and implemented a normalized relational database for a real-world event management company, including ER modeling, normalization up to 3NF, SQL scripts, and a user interface for CRUD and reporting.',\n  subject: 'DBMS'\n},\n// AI\n{\n  title: 'Bayesian Candy Classification',\n  tech: 'Java, Probability, Bayesian Inference, OOP',\n  desc: 'Developed a Bayesian inference system to classify candy bags and dynamically predict next candy types based on observed samples.',\n  subject: 'AI'\n}, {\n  title: 'Bayesian Network Reasoner',\n  tech: 'Python, Probability, Bayesian Networks',\n  desc: 'Implemented a Bayesian Network for classic alarm problems (burglary, earthquake, alarm, calls) with query and evidence analysis.',\n  subject: 'AI'\n}, {\n  title: 'Red-Blue Nim Game (MinMax & Alpha-Beta Pruning)',\n  tech: 'Java, Game Theory, MinMax, Alpha-Beta Pruning',\n  desc: 'Built a two-pile Nim variant with optimal AI play using MinMax and alpha-beta pruning, supporting standard and misère modes.',\n  subject: 'AI'\n}, {\n  title: 'AI Graph Pathfinding: A* and Uniform Cost Search',\n  tech: 'Java, A* Search, Uniform Cost Search, Graph Algorithms',\n  desc: 'Engineered a graph-based pathfinding solution for city-to-city routing, supporting both UCS and A* heuristic algorithms.',\n  subject: 'AI'\n},\n// ML\n{\n  title: 'Deep Learning-Based Image Captioning',\n  tech: 'Python, TensorFlow, Keras, BERT, COCO, OpenCV, Jupyter',\n  desc: 'Built and trained an image captioning system using CNN+RNN and transformer/BERT-based decoders with MS COCO dataset, achieving high semantic accuracy.',\n  subject: 'ML'\n},\n// Software Engineering\n{\n  title: 'Stock Recording System (SRS)',\n  tech: 'Java, Python, SQL, Android, JUnit, Microsoft Project, Agile, Git',\n  desc: 'Developed a full SDLC stock trading portfolio app with live market data, authentication, event notifications, Agile methodology, and detailed documentation.',\n  subject: 'Software Engineering'\n}\n// Distributed Systems (again if you want to emphasize both)\n// {\n//   title: 'Totally Ordered Multicast Implementation',\n//   tech: 'Java, Distributed Systems, Messaging Protocols',\n//   desc: 'Implemented a totally ordered multicast algorithm ensuring uniform message delivery and consistent state across distributed processes. Designed and analyzed global event sequencing for reliability and consistency in asynchronous systems.',\n//   subject: 'Distributed Systems'\n// },\n];\nfunction Projects() {\n  _s();\n  const [tab, setTab] = useState('featured');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      className: \"bg-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/videos/projects.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaLaptopCode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), \" Projects\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-tabs\",\n        style: {\n          display: 'flex',\n          gap: 12,\n          margin: '1.5rem 0 2rem 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTab('featured'),\n          className: tab === 'featured' ? 'active-tab' : '',\n          style: {\n            padding: '0.5rem 1.3rem',\n            border: 'none',\n            borderRadius: 6,\n            fontWeight: 600,\n            background: tab === 'featured' ? '#764abc' : '#f0f0f0',\n            color: tab === 'featured' ? '#fff' : '#222',\n            cursor: 'pointer'\n          },\n          children: \"Featured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTab('academic'),\n          className: tab === 'academic' ? 'active-tab' : '',\n          style: {\n            padding: '0.5rem 1.3rem',\n            border: 'none',\n            borderRadius: 6,\n            fontWeight: 600,\n            background: tab === 'academic' ? '#764abc' : '#f0f0f0',\n            color: tab === 'academic' ? '#fff' : '#222',\n            cursor: 'pointer'\n          },\n          children: \"Academic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-grid\",\n        children: tab === 'featured' ? featuredProjects.map((proj, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: proj.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-tech\",\n            children: proj.tech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-desc\",\n            children: proj.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)) : academicProjects.map((proj, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [proj.title, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.95rem',\n                color: '#9d4edd',\n                fontWeight: 500\n              },\n              children: [\"(\", proj.subject, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-tech\",\n            children: proj.tech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-desc\",\n            children: proj.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"0ETW7YAlr7S8FJ8nrzHGnz0Oca0=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["useState","FaLaptopCode","jsxDEV","_jsxDEV","Fragment","_Fragment","featuredProjects","title","tech","desc","academicProjects","subject","Projects","_s","tab","setTab","children","autoPlay","muted","loop","className","src","type","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","margin","onClick","padding","border","borderRadius","fontWeight","background","color","cursor","map","proj","idx","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/niran/bmi/src/pages/Projects.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { FaLaptopCode } from 'react-icons/fa';\r\n\r\nconst featuredProjects = [\r\n  {\r\n    title: 'Block-Level Data Deduplication for Cloud',\r\n    tech: 'AWS, PyCharm, MySQL, SHA256',\r\n    desc: 'Optimized storage by removing redundant data blocks before uploading to the cloud.',\r\n  },\r\n  {\r\n    title: 'VOLUGRAD – Volunteer Management Platform',\r\n    tech: 'React, Laravel, Node.js, SQL',\r\n    desc: 'Real-time chat, professor dashboards, 2FA, and secure task tracking for university volunteering.',\r\n  },\r\n  {\r\n    title: 'Facial Insight Attendance System',\r\n    tech: 'TensorFlow, OpenCV, Flask, MySQL',\r\n    desc: 'AI-powered face recognition for secure attendance and report generation.',\r\n  },\r\n  {\r\n    title: 'E-Commerce Admin Dashboard',\r\n    tech: 'React, Chart.js, Node.js, MongoDB',\r\n    desc: 'Feature-rich admin panel with sales tracking, analytics, and order management.',\r\n  },\r\n  {\r\n    title: 'Job Market Analyzer',\r\n    tech: 'Python, Pandas, Plotly, Streamlit',\r\n    desc: 'Analyzes tech job postings to show skill demand trends across US regions.',\r\n  },\r\n  {\r\n    title: 'AI-Powered Resume Ranker',\r\n    tech: 'NLP, Python, Scikit-learn',\r\n    desc: 'Ranks resumes by matching keywords against job descriptions using ML models.',\r\n  }\r\n];\r\n\r\nconst academicProjects = [\r\n  // Distributed Systems\r\n  {\r\n    title: 'Totally Ordered Multicast Implementation',\r\n    tech: 'Java, Distributed Systems, Messaging Protocols',\r\n    desc: 'Implemented a totally ordered multicast algorithm ensuring uniform message delivery and consistent state across distributed processes. Designed and analyzed global event sequencing for reliability and consistency in asynchronous systems.',\r\n    subject: 'Distributed Systems'\r\n  },\r\n  // CCBD / Big Data\r\n  {\r\n    title: 'Parallel Matrix Multiplication in Big Data Frameworks',\r\n    tech: 'Java, Scala, Apache Hadoop, Apache Spark',\r\n    desc: 'Designed and implemented distributed matrix multiplication algorithms, leveraging big data frameworks for scalable and parallel computation. Demonstrated efficiency gains for large matrix operations.',\r\n    subject: 'CCBD'\r\n  },\r\n  {\r\n    title: 'KMeans Clustering on Big Data',\r\n    tech: 'Scala, Apache Spark, Data Clustering',\r\n    desc: 'Built a scalable KMeans clustering implementation using Spark, optimizing centroid calculation over iterative rounds. Analyzed clustering results and performance on large data sets.',\r\n    subject: 'CCBD'\r\n  },\r\n  {\r\n    title: 'Real-Time Twitter Data Analysis',\r\n    tech: 'Java, Hadoop, MapReduce, Big Data',\r\n    desc: 'Processed and analyzed large volumes of Twitter data using MapReduce/Hadoop, extracting insights and trends from real-world social media streams.',\r\n    subject: 'CCBD'\r\n  },\r\n  {\r\n    title: 'Graph Analytics with Apache Pig',\r\n    tech: 'Apache Pig, Big Data, Graph Processing',\r\n    desc: 'Wrote Pig scripts to process and analyze graph-structured data, demonstrating large-scale graph analytics in big data environments.',\r\n    subject: 'CCBD'\r\n  },\r\n  {\r\n    title: 'Parallel Graph Partitioning using Spark GraphX',\r\n    tech: 'Scala, Apache Spark, GraphX, Distributed Computing',\r\n    desc: 'Engineered a parallel graph partitioning algorithm in Scala utilizing Spark GraphX and Pregel API. Assigned initial clusters, performed iterative label propagation, and calculated cluster sizes for large real-world graphs. Demonstrated expertise in scalable graph analytics, edge/vertex processing, and distributed computation.',\r\n    subject: 'CCBD'\r\n  },\r\n  {\r\n    title: 'Large-Scale Graph Partitioning with Spark',\r\n    tech: 'Scala, Apache Spark, Graph Algorithms',\r\n    desc: 'Developed a graph partitioning algorithm in Scala using Spark, assigning cluster IDs and calculating partition sizes for large-scale networks. Demonstrated scalable parallel processing and partition management.',\r\n    subject: 'CCBD'\r\n  },\r\n  // DAA\r\n  {\r\n    title: 'Algorithm Analysis: Insertion vs Merge Sort',\r\n    tech: 'Python, Algorithm Analysis, Matplotlib, Complexity Theory',\r\n    desc: 'Implemented and analyzed the time complexity of insertion sort and merge sort algorithms, including code for empirical performance comparison, intersection point plotting, and theoretical complexity proofs. Plotted algorithm performance and identified scenarios where each sorting technique is preferable.',\r\n    subject: 'DAA'\r\n  },\r\n  // DBMS\r\n  {\r\n    title: 'Event Management System Database',\r\n    tech: 'MySQL, SQL, ER Diagram, Java/C#, Database Normalization, Git',\r\n    desc: 'Designed and implemented a normalized relational database for a real-world event management company, including ER modeling, normalization up to 3NF, SQL scripts, and a user interface for CRUD and reporting.',\r\n    subject: 'DBMS'\r\n  },\r\n  // AI\r\n  {\r\n    title: 'Bayesian Candy Classification',\r\n    tech: 'Java, Probability, Bayesian Inference, OOP',\r\n    desc: 'Developed a Bayesian inference system to classify candy bags and dynamically predict next candy types based on observed samples.',\r\n    subject: 'AI',\r\n  },\r\n  {\r\n    title: 'Bayesian Network Reasoner',\r\n    tech: 'Python, Probability, Bayesian Networks',\r\n    desc: 'Implemented a Bayesian Network for classic alarm problems (burglary, earthquake, alarm, calls) with query and evidence analysis.',\r\n    subject: 'AI',\r\n  },\r\n  {\r\n    title: 'Red-Blue Nim Game (MinMax & Alpha-Beta Pruning)',\r\n    tech: 'Java, Game Theory, MinMax, Alpha-Beta Pruning',\r\n    desc: 'Built a two-pile Nim variant with optimal AI play using MinMax and alpha-beta pruning, supporting standard and misère modes.',\r\n    subject: 'AI',\r\n  },\r\n  {\r\n    title: 'AI Graph Pathfinding: A* and Uniform Cost Search',\r\n    tech: 'Java, A* Search, Uniform Cost Search, Graph Algorithms',\r\n    desc: 'Engineered a graph-based pathfinding solution for city-to-city routing, supporting both UCS and A* heuristic algorithms.',\r\n    subject: 'AI',\r\n  },\r\n  // ML\r\n  {\r\n    title: 'Deep Learning-Based Image Captioning',\r\n    tech: 'Python, TensorFlow, Keras, BERT, COCO, OpenCV, Jupyter',\r\n    desc: 'Built and trained an image captioning system using CNN+RNN and transformer/BERT-based decoders with MS COCO dataset, achieving high semantic accuracy.',\r\n    subject: 'ML',\r\n  },\r\n  // Software Engineering\r\n  {\r\n    title: 'Stock Recording System (SRS)',\r\n    tech: 'Java, Python, SQL, Android, JUnit, Microsoft Project, Agile, Git',\r\n    desc: 'Developed a full SDLC stock trading portfolio app with live market data, authentication, event notifications, Agile methodology, and detailed documentation.',\r\n    subject: 'Software Engineering',\r\n  },\r\n  // Distributed Systems (again if you want to emphasize both)\r\n  // {\r\n  //   title: 'Totally Ordered Multicast Implementation',\r\n  //   tech: 'Java, Distributed Systems, Messaging Protocols',\r\n  //   desc: 'Implemented a totally ordered multicast algorithm ensuring uniform message delivery and consistent state across distributed processes. Designed and analyzed global event sequencing for reliability and consistency in asynchronous systems.',\r\n  //   subject: 'Distributed Systems'\r\n  // },\r\n];\r\n\r\nfunction Projects() {\r\n  const [tab, setTab] = useState('featured');\r\n\r\n  return (\r\n    <>\r\n      <video autoPlay muted loop className=\"bg-video\">\r\n        <source src=\"/videos/projects.mp4\" type=\"video/mp4\" />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n\r\n      <div className=\"projects-container\">\r\n        <h2>\r\n          <FaLaptopCode /> Projects\r\n        </h2>\r\n        <div className=\"projects-tabs\" style={{ display: 'flex', gap: 12, margin: '1.5rem 0 2rem 0' }}>\r\n          <button\r\n            onClick={() => setTab('featured')}\r\n            className={tab === 'featured' ? 'active-tab' : ''}\r\n            style={{\r\n              padding: '0.5rem 1.3rem',\r\n              border: 'none',\r\n              borderRadius: 6,\r\n              fontWeight: 600,\r\n              background: tab === 'featured' ? '#764abc' : '#f0f0f0',\r\n              color: tab === 'featured' ? '#fff' : '#222',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Featured\r\n          </button>\r\n          <button\r\n            onClick={() => setTab('academic')}\r\n            className={tab === 'academic' ? 'active-tab' : ''}\r\n            style={{\r\n              padding: '0.5rem 1.3rem',\r\n              border: 'none',\r\n              borderRadius: 6,\r\n              fontWeight: 600,\r\n              background: tab === 'academic' ? '#764abc' : '#f0f0f0',\r\n              color: tab === 'academic' ? '#fff' : '#222',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Academic\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"project-grid\">\r\n          {tab === 'featured'\r\n            ? featuredProjects.map((proj, idx) => (\r\n                <div className=\"project-card\" key={idx}>\r\n                  <h3>{proj.title}</h3>\r\n                  <p className=\"project-tech\">{proj.tech}</p>\r\n                  <p className=\"project-desc\">{proj.desc}</p>\r\n                </div>\r\n              ))\r\n            : academicProjects.map((proj, idx) => (\r\n                <div className=\"project-card\" key={idx}>\r\n                  <h3>\r\n                    {proj.title}{' '}\r\n                    <span style={{ fontSize: '0.95rem', color: '#9d4edd', fontWeight: 500 }}>\r\n                      ({proj.subject})\r\n                    </span>\r\n                  </h3>\r\n                  <p className=\"project-tech\">{proj.tech}</p>\r\n                  <p className=\"project-desc\">{proj.desc}</p>\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}