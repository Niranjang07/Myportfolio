{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niran\\\\bmi\\\\src\\\\pages\\\\AdminLogin.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminLogin.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminLogin() {\n  _s();\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleLogin = e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = credentials;\n    if (username === 'admin' && password === '123') {\n      navigate('/admin'); // ‚úÖ redirect to admin console\n    } else {\n      setError('Invalid admin credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login-bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"admin-login-form\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDEE1\\uFE0F Admin Access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: credentials.username,\n          onChange: e => setCredentials({\n            ...credentials,\n            username: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: credentials.password,\n          onChange: e => setCredentials({\n            ...credentials,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AdminLogin, \"HgKr3683IYhfYkScb+A6xfnIP1o=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminLogin","_s","navigate","credentials","setCredentials","username","password","error","setError","handleLogin","e","preventDefault","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/niran/bmi/src/pages/AdminLogin.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminLogin.css';\r\n\r\nfunction AdminLogin() {\r\n  const navigate = useNavigate();\r\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = credentials;\r\n\r\n    if (username === 'admin' && password === '123') {\r\n      navigate('/admin'); // ‚úÖ redirect to admin console\r\n    } else {\r\n      setError('Invalid admin credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"admin-login-bg\"></div>\r\n      <div className=\"admin-login-container\">\r\n        <form className=\"admin-login-form\" onSubmit={handleLogin}>\r\n          <h2>üõ°Ô∏è Admin Access</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={credentials.username}\r\n            onChange={(e) => setCredentials({ ...credentials, username: e.target.value })}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={credentials.password}\r\n            onChange={(e) => setCredentials({ ...credentials, password: e.target.value })}\r\n            required\r\n          />\r\n          {error && <p className=\"error-text\">{error}</p>}\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAAEW,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM;MAAEN,QAAQ;MAAEC;IAAS,CAAC,GAAGH,WAAW;IAE1C,IAAIE,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,KAAK,EAAE;MAC9CJ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLM,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAKgB,SAAS,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtCpB,OAAA;MAAKgB,SAAS,EAAC,uBAAuB;MAAAD,QAAA,eACpCf,OAAA;QAAMgB,SAAS,EAAC,kBAAkB;QAACK,QAAQ,EAAET,WAAY;QAAAG,QAAA,gBACvDf,OAAA;UAAAe,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBpB,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAElB,WAAW,CAACE,QAAS;UAC5BiB,QAAQ,EAAGZ,CAAC,IAAKN,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEE,QAAQ,EAAEK,CAAC,CAACa,MAAM,CAACF;UAAM,CAAC,CAAE;UAC9EG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpB,OAAA;UACEsB,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAElB,WAAW,CAACG,QAAS;UAC5BgB,QAAQ,EAAGZ,CAAC,IAAKN,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEG,QAAQ,EAAEI,CAAC,CAACa,MAAM,CAACF;UAAM,CAAC,CAAE;UAC9EG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACDV,KAAK,iBAAIV,OAAA;UAAGgB,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAEL;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CpB,OAAA;UAAQsB,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA,eACN,CAAC;AAEP;AAAChB,EAAA,CA1CQD,UAAU;EAAA,QACAL,WAAW;AAAA;AAAA8B,EAAA,GADrBzB,UAAU;AA4CnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}